<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 3.2.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-ippm-responsiveness-02" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Responsiveness under Working Conditions">Responsiveness under Working Conditions</title>

    <author initials="C." surname="Paasch" fullname="Christoph Paasch">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cpaasch@apple.com</email>
      </address>
    </author>
    <author initials="R." surname="Meyer" fullname="Randall Meyer">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>rrm@apple.com</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="W." surname="Hawkins" fullname="Will Hawkins">
      <organization>University of Cincinnati</organization>
      <address>
        <email>hawkinwh@ucmail.uc.edu</email>
      </address>
    </author>

    <date year="2023" month="October" day="16"/>

    <area>Transport</area>
    <workgroup>IP Performance Measurement</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks.
Even after a decade of work on standardizing technical solutions,
it remains a common problem for the end users.</t>

<t>Everyone "knows" that it is "normal" for a video conference to
have problems when somebody else at home is
watching a 4K movie or uploading photos from their phone.
However, there is no technical reason for this to be the case.
In fact, various queue management solutions
have solved the problem.</t>

<t>Our networks remain unresponsive, not from a lack of technical solutions,
but rather a lack of awareness of the problem and deployment of its solutions.
We believe that creating a tool that measures the problem and matches people's
everyday experience will create the necessary awareness,
and result in a demand for solutions.</t>

<t>This document specifies the "Responsiveness Test" for measuring responsiveness.
It uses common protocols and mechanisms to measure user
experience specifically when the network is under working conditions.
The measurement is expressed as "Round-trips Per Minute" (RPM)
and should be included with throughput (up and down) and
idle latency as critical indicators of network quality.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks <xref target="Bufferbloat"/>.
Solutions like fq_codel <xref target="RFC8290"/>, PIE <xref target="RFC8033"/> or L4S <xref target="RFC9330"/> have been standardized
and are to some extent widely implemented.
Nevertheless, people still suffer from bufferbloat.</t>

<t>Although significant, the impact on user experience can be transitory --
that is, its effect is not always visible to the user.
Whenever a network is actively being used at its full capacity,
buffers can fill up and create latency for traffic.
The duration of those full buffers may be brief:
a medium-sized file transfer, like an email attachment
or uploading photos,
can create bursts of latency spikes.
An example of this is lag occurring during a videoconference,
where a connection is briefly shown as unstable.</t>

<t>These short-lived disruptions make it hard to narrow down the cause.
We believe that it is necessary to create a standardized way to
measure and express responsiveness.</t>

<t>Including the responsiveness-under-working-conditions test
among other measurements of network quality (e.g., throughput
and idle latency) would raise awareness of the problem and
establish the expectation among users that their network providers deploy
solutions.</t>

<section anchor="terminology"><name>Terminology</name>

<t>A word about the term "bufferbloat" -- the undesirable latency
that comes from a router or other network equipment
buffering too much data.
This document uses the term as a general description of bad latency,
using more precise wording where warranted.</t>

<t>"Latency" is a poor measure of responsiveness,
because it can be hard for the general public to understand.
The units are unfamiliar ("what is a millisecond?") and
counterintuitive ("100 msec -- that sounds good --
it's only a tenth of a second!").</t>

<t>Instead, we define the term "responsiveness under working conditions"
to make it clear that we are measuring all, not just idle, conditions,
and use "round-trips per minute" as the unit.
The advantage of using round-trips per minute as the unit are two-fold: First, it allows for a unit
that is "the higher the better". This kind of unit is often more intuitive for end-users.
Second, the range of the values tends to be around the 4-digit integer range which
is also a value easy to compare and read, again allowing for a more intuitive use.
Finally, we abbreviate the unit to "RPM", a wink to the
"revolutions per minute" that we use for car engines.</t>

<t>This document defines an algorithm for the "Responsiveness Test"
that explicitly measures responsiveness under working conditions.</t>

</section>
</section>
<section anchor="design-constraints"><name>Design Constraints</name>

<t>There are many challenges to defining measurements of the Internet:
the dynamic nature of the Internet,
the diverse nature of the traffic,
the large number of devices that affect traffic,
the difficulty of attaining appropriate measurement conditions,
diurnal traffic patterns,
and changing routes.</t>

<t>In order to minimize the effects of these challenges,
it's best to keep the test duration relatively short.</t>

<t>TCP and UDP traffic, or traffic on ports 80 and 443, may take
significantly different paths over the network between source and destination
and be subject to entirely different Quality of Service (QoS) treatment.
A good test will use standard transport-layer traffic -- typical
for people's use of the network --
that is subject to the transport layer's congestion control algorithms
that might reduce the traffic's rate and thus its buffering in the network.</t>

<t>Traditionally, one thinks of bufferbloat happening in the network, i.e., on
routers and switches of the Internet.
However, the networking stacks of the clients and servers can
have huge buffers.
Data sitting in TCP sockets or waiting for the application
to send or read causes artificial latency, and affects user experience
the same way as in-network bufferbloat.</t>

<t>Finally, it is crucial to recognize that significant
queueing only happens on entry to the lowest-capacity
(or "bottleneck") hop on a network path.
For any flow of data between two endpoints
there is always one hop along the path where the capacity
available to that flow at that hop is the lowest among
all the hops of that flow's path at that moment in time.
It is important to understand that the existence of a
lowest-capacity hop on a network path and a buffer to smooth bursts
of data is not itself a problem.
In a heterogeneous network like the Internet it is
inevitable that there must necessarily be some hop
along the path with the lowest capacity for that path.
If that hop were to be improved, then some other hop would
become the new lowest-capacity hop for that path.
In this context a "bottleneck" should not be seen as a problem to
be fixed, because any attempt to "fix" the bottleneck is futile --
such a "fix" can never remove the existence of a bottleneck
on a path; it just moves the bottleneck somewhere else.
Arguably, this heterogeneity of the Internet is one of its greatest strengths.
Allowing individual technologies to evolve and improve at their
own pace, without requiring the entire Internet to change in
lock-step, has enabled enormous improvements over the years
in technologies like DSL, cable modems, Ethernet, and Wi-Fi,
each advancing independently as new developments became ready.
As a result of this flexibility we have moved incrementally,
one step at a time, from 56kb/s dial-up modems in the 1990s to
Gb/s home Internet service and Gb/s wireless connectivity today.</t>

<t>Note that in a shared datagram network, conditions do not remain static.
The hop that is the current bottleneck may change from moment to moment.
For example, changes in simultaneous traffic may result in changes
to a flow's share of a given hop. A user moving around
may cause the Wi-Fi transmission rate to vary widely,
from a few Mb/s when far from the Access Point,
all the way up to Gb/s or more when close to the Access Point.</t>

<t>Consequently, if we wish to enjoy the benefits of the Internet's great
flexibility, we need software that embraces and celebrates this
diversity and adapts intelligently to the varying conditions it encounters.</t>

<t>Because significant queueing only happens on entry to the bottleneck
hop, the queue management at this critical hop of the path almost
entirely determines the responsiveness of the entire flow.
If the bottleneck hop's queue management algorithm allows an
excessively large queue to form, this results in excessively large
delays for packets sitting in that queue awaiting transmission,
significantly degrading overall user experience.</t>

<t>In order to discover the depth of the buffer at the bottleneck hop,
the proposed Responsiveness Test mimics normal network operations and data transfers,
with the goal of filling the bottleneck buffer to capacity, and then
measures the resulting end-to-end latency under these so-called working conditions.
A well-managed bottleneck queue keeps its occupancy
under control, resulting in consistently low round-trip times
and consistently good responsiveness.
A poorly managed bottleneck queue will not.</t>

</section>
<section anchor="goals"><name>Goals</name>

<t>The algorithm described here defines the Responsiveness Test that serves as a means of
quantifying user experience of latency in their network connection. Therefore:</t>

<t><list style="numbers">
  <t>Because today's Internet traffic primarily uses HTTP/2 over TLS, the test's
algorithm should use that protocol.  <vspace blankLines='1'/>
As a side note: other types of traffic are gaining in popularity (HTTP/3)
and/or are already being used widely (RTP).
Traffic prioritization and QoS rules on the Internet may
subject traffic to completely different paths:
these could also be measured separately.</t>
  <t>Because the Internet is marked by the deployment of countless middleboxes like
transparent TCP proxies or traffic prioritization for certain types of traffic,
the Responsiveness Test algorithm must take into account their effect on
TCP-handshake <xref target="RFC0793"/>, TLS-handshake, and request/response.</t>
  <t>Because the goal of the test is to educate end users, the results should be expressed in an intuitive, nontechnical form
and not commit the user to spend a significant amount of their time (we target 20 seconds).</t>
</list></t>

</section>
<section anchor="measuring-responsiveness-under-working-conditions"><name>Measuring Responsiveness Under Working Conditions</name>

<t>Overall, the test to measure responsiveness under working conditions proceeds in two steps:</t>

<t><list style="numbers">
  <t>Put the network connection into "working conditions"</t>
  <t>Measure responsiveness of the network.</t>
</list></t>

<t>The following explains how the former and the latter are achieved.</t>

<section anchor="working-conditions"><name>Working Conditions</name>

<t>What are <em>the</em> conditions that best emulate how a network
connection is used? There is no one true answer to this question. It is a
tradeoff between using realistic traffic patterns and pushing the network to
its limits.</t>

<t>The Responsiveness Test defines working conditions as the condition where the path between the
measuring endpoints is utilized at its end-to-end capacity and the queue at the bottleneck link
is at (or beyond) its maximum occupancy. Under these conditions, the network connection's responsiveness
will be at its worst.</t>

<t>The Responsiveness Test algorithm for reaching working conditions combines
multiple standard HTTP transactions with very large data objects according to realistic traffic patterns
to create these conditions.</t>

<t>This allows to create a stable state of working conditions during which the
bottleneck of the path between client and server has its buffer filled
up entirely, without generating DoS-like traffic
patterns (e.g., intentional UDP flooding). This creates a realistic traffic mix
representative of what a typical user's network experiences in normal operation.</t>

<t>Finally, as end-user usage of the network evolves to newer protocols and congestion
control algorithms, it is important that the working conditions also can evolve
to continuously represent a realistic traffic pattern.</t>

<section anchor="single-flow-vs-multi-flow"><name>Single-flow vs multi-flow</name>

<t>A single TCP connection may not be sufficient
to reach the capacity and full buffer occupancy of a path quickly.
Using a 4MB receive window, over a network with a 32 ms round-trip time,
a single TCP connection can achieve up to 1Gb/s throughput.
Additionally, deep buffers along the path between the two endpoints may be
significantly larger than 4MB.
TCP allows larger receive window sizes, up to 1GB. However, most transport stacks
aggressively limit the size of the receive window to avoid consuming too much
memory.</t>

<t>Thus, the only way to achieve full capacity and full buffer occupancy on those
networks is by creating multiple connections, allowing to actively fill the
bottleneck's buffer to achieve maximum working conditions.</t>

<t>Even if a single TCP connection would be able to fill the bottleneck's buffer,
it may take some time for a single TCP connection to ramp
up to full speed. One of the goals of the Responsiveness Test is to help the user
quickly measure their network. As a result, the test must load the network, take its measurements, and then finish
as fast as possible.</t>

<t>Finally, traditional loss-based TCP congestion control algorithms
react aggressively to packet loss by reducing the congestion window.
This reaction (intended by the protocol design) decreases the
queueing within the network, making it harder to determine the
depth of the bottleneck queue reliably.</t>

<t>The purpose of the Responsiveness Test is not to productively move data
across the network, the way a normal application does.
The purpose of the Responsiveness Test is to, as quickly as possible, simulate
a representative traffic load as if real applications were doing
sustained data transfers and measure the resulting round-trip time
occurring under those realistic conditions.
Because of this, using multiple simultaneous parallel connections
allows the Responsiveness Test to complete its task more quickly, in a way that
overall is less disruptive and less wasteful of network capacity
than a test using a single TCP connection that would take longer
to bring the bottleneck hop to a stable saturated state.</t>

<t>One of the configuration parameters for the test is an upper bound on the number of parallel load-generating
connections. We recommend a default value for this parameter of 16.</t>

</section>
<section anchor="parallel-vs-sequential-uplink-and-downlink"><name>Parallel vs Sequential Uplink and Downlink</name>

<t>Poor responsiveness can be caused by queues in either (or both)
the upstream and the downstream direction.
Furthermore, both paths may differ significantly due to access link
conditions (e.g., 5G downstream and LTE upstream) or routing changes
within the ISPs.
To measure responsiveness under working conditions,
the algorithm must explore both directions.</t>

<t>One approach could be to measure responsiveness in the uplink and downlink
in parallel. It would allow for a shorter test run-time.</t>

<t>However, a number of caveats come with measuring in parallel:</t>

<t><list style="symbols">
  <t>Half-duplex links may not permit simultaneous uplink and downlink traffic.
This restriction means the test might not reach the path's capacity in both directions at once and thus not expose
all the potential sources of low responsiveness.</t>
  <t>Debuggability of the results becomes harder:
During parallel measurement it is impossible to differentiate whether
the observed latency happens in the uplink or the downlink direction.</t>
</list></t>

<t>Thus, we recommend testing uplink and downlink sequentially. Parallel testing
is considered a future extension.</t>

</section>
<section anchor="achieving-full-buffer-utilization"><name>Achieving Full Buffer Utilization</name>

<t>The Responsiveness Test gradually increases the number of TCP connections (known as load-generating connections)
and measures "goodput" (the sum of actual data transferred across all connections in a unit of time)
continuously.
By definition, once goodput is maximized, buffers will start filling up, creating the
"standing queue" that is characteristic of bufferbloat. At this moment the test starts
measuring the responsiveness until it, too, reaches saturation.
At this point we are creating the worst-case scenario within the limits of the
realistic traffic pattern.</t>

<t>The algorithm notes that throughput increases rapidly until TCP
connections complete their TCP slow-start phase.
At that point, throughput eventually stalls,
often due to receive window limitations, particularly in cases of
high network bandwidth, high network round-trip time,
low receive window size, or a combination of all three.
The only means to further increase throughput is by
adding more TCP connections to the pool of load-generating connections.
If new connections leave the throughput the same,
full link utilization has been reached.
At this point, adding more connections will allow to achieve full buffer occupancy.
Responsiveness will gradually decrease from now on, until the buffers
are entirely full and reach stability of the responsiveness as well.</t>

</section>
</section>
<section anchor="test-parameters"><name>Test parameters</name>

<t>A number of parameters can be used to configure the test methodology. The following list
contains the names of those parameters and their default values. The detailed description of the
methodology that follows will explain how these parameters are being used. Experience has shown
that the default values for these parameters allow for a low runtime for the test and produce
accurate results in a wide range of environments.</t>

<texttable>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Explanation</ttcol>
      <ttcol align='left'>Default Value</ttcol>
      <c>MAD</c>
      <c>Moving Average Distance (number of intervals to take into account for the moving average)</c>
      <c>4</c>
      <c>ID</c>
      <c>Interval duration at which the algorithm reevaluates stability</c>
      <c>1 second</c>
      <c>TMP</c>
      <c>Trimmed Mean Percentage to be trimmed</c>
      <c>95%</c>
      <c>SDT</c>
      <c>Standard Deviation Tolerance for stability detection</c>
      <c>5%</c>
      <c>MNP</c>
      <c>Maximum number of parallel transport-layer connections</c>
      <c>16</c>
      <c>MPS</c>
      <c>Maximum responsiveness probes per second</c>
      <c>100</c>
      <c>PTC</c>
      <c>Percentage of Total Capacity the probes are allowed to consume</c>
      <c>5%</c>
</texttable>

</section>
<section anchor="measuring-responsiveness"><name>Measuring Responsiveness</name>

<t>Measuring responsiveness while achieving working conditions is an iterative process.
Moreover, it requires a sufficiently large sample of measurements to have confidence in the results.</t>

<t>The measurement of the responsiveness happens by sending probe-requests.
There are two types of probe requests:</t>

<t><list style="numbers">
  <t>An HTTP GET request on a connection separate from the load-generating connections ("foreign probes").
This probe type mimics the time it takes for a web browser to connect to a new
web server and request the first element of a web page (e.g., "index.html"),
or the startup time for a video streaming client to launch and begin fetching media.</t>
  <t>An HTTP GET request multiplexed on the load-generating connections ("self probes").
This probe type mimics the time it takes for a video streaming client
to skip ahead to a different chapter in the same video stream,
or for a navigation mapping application to react and fetch new map tiles
when the user scrolls the map to view a different area.
In a well functioning system, fetching new data
over an existing connection should take less time than
creating a brand new TLS connection from scratch to do the same thing.</t>
</list></t>

<t>Foreign probes will provide three (3) sets of data-points: First, the duration of the TCP-handshake
(noted hereafter as <spanx style="verb">tcp_f</spanx>).
Second, the TLS round-trip-time (noted <spanx style="verb">tls_f</spanx>). For this, it is important to note that different TLS versions
have a different number of round-trips. Thus, the TLS establishment time needs to be
normalized to the number of round-trips the TLS handshake takes until the connection
is ready to transmit data. And third, the HTTP elapsed time between issuing the GET
request for a 1-byte object and receiving the entire response (noted <spanx style="verb">http_f</spanx>).</t>

<t>Self probes will provide a single data-point that measures the duration of time between
when the HTTP GET request for the 1-byte object is issued on the load-generating connection and when the
full HTTP response has been received (noted <spanx style="verb">http_s</spanx>).</t>

<t><spanx style="verb">tcp_f</spanx>, <spanx style="verb">tls_f</spanx>, <spanx style="verb">http_f</spanx> and <spanx style="verb">http_s</spanx> are all measured in milliseconds.</t>

<t>The more probes that are sent, the more data available for calculation. In order to generate
as much data as possible, the Responsiveness Test specifies that a client issue these probes regularly.
There is, however, a risk that on low-capacity networks the responsiveness probes
themselves will consume a significant amount of the capacity. Because the test mandates
first saturating capacity before starting to probe for responsiveness, the test will have an
accurate estimate of how much of the capacity the responsiveness probes will consume and never
send more probes than the network can handle.</t>

<t>Limiting the data used by probes can be done by providing an estimate of the number of bytes exchanged for a
each of the probe types. Taking TCP and TLS overheads into account, we can estimate
the amount of data exchanged for a foreign probe to be around 5000 bytes.
For self probes we can expect an overhead of no more than 1000 bytes.</t>

<t>Given this information, we recommend that a test client does
not send more than <spanx style="verb">MPS</spanx> (Maximum responsiveness Probes per Second - default to 100) probes per <spanx style="verb">ID</spanx>.
The probes should be spread out equally over the duration of the interval. The test client
should uniformly and randomly select from the active load-generating connections on which to send self probes.</t>

<t>According to the default parameter values, the probes will consume 300 KB (or 2400Kb) of data per second, meaning
a total capacity utilization of 2400 Kbps for the probing.</t>

<t>On high-speed networks, these default parameter values will provide a significant amount of samples, while at
the same time minimizing the probing overhead.
However, on severely capacity-constrained networks the probing traffic could consume
a significant portion of the available capacity. The Responsiveness Test must
adjust its probing frequency in such a way that the probing traffic does not consume
more than <spanx style="verb">PTC</spanx> (Percentage of Total Capacity - default to 5%) of the available capacity.</t>

<section anchor="aggregating-the-measurements"><name>Aggregating the Measurements</name>

<t>The algorithm produces sets of 4 times for each probe, namely:
<spanx style="verb">tcp_f</spanx>, <spanx style="verb">tls_f</spanx>, <spanx style="verb">http_f</spanx>, <spanx style="verb">http_l</spanx> (from the previous section).
The responsiveness of the network connection being tested evolves over time as buffers gradually reach saturation. Once
the buffers are saturated, responsiveness will stabilize. Thus, the final calculation of network responsiveness
considers the last MAD (Moving Average Distance - default to 4) intervals worth of completed responsiveness probes.</t>

<t>Over that period of time, a large number of samples will have been collected.
These may be affected by noise in the measurements, and outliers. Thus, to aggregate these
we suggest using a trimmed mean at the <spanx style="verb">TMP</spanx> (Trimmed Mean Percentage - default to 95%) percentile, thus providing the following numbers:
<spanx style="verb">TM(tcp_f)</spanx>, <spanx style="verb">TM(tls_f)</spanx>, <spanx style="verb">TM(http_f)</spanx>, <spanx style="verb">TM(http_l)</spanx>.</t>

<t>The responsiveness is then calculated as the weighted mean:</t>

<figure><artwork><![CDATA[
Responsiveness = 60000 /
(1/6*(TM(tcp_f) + TM(tls_f) + TM(http_f)) + 1/2*TM(http_s))
]]></artwork></figure>

<t>This responsiveness value presents round-trips per minute (RPM).</t>

</section>
</section>
<section anchor="final-algorithm"><name>Final Algorithm</name>

<t>Considering the previous two sections, where we explained the meaning of
working conditions and the definition of responsiveness, we can now describe
the design of final algorithm. In order to measure the worst-case latency, we need to transmit
traffic at the full capacity of the path as well as ensure the buffers are filled
to the maximum.
We can achieve this by continuously adding HTTP sessions to the pool of connections
in an ID (Interval duration - default to 1 second) interval. This technique ensures that we quickly reach full capacity full
buffer occupancy. First, the algorithm reaches stability for the goodput. Once
goodput stability has been achieved, responsiveness probes will be transmitted
until responsiveness stability is reached.</t>

<t>We consider both goodput and responsiveness to be stable when the standard deviation
of the moving averages of the responsiveness calculated in the most-recent MAD intervals is within SDT 
(Standard Deviation Tolerance - default to 5%) of the moving average calculated in the most-recent ID.</t>

<t>The following algorithm reaches working conditions of a network
by using HTTP/2 upload (POST) or download (GET) requests of infinitely large
files.
The algorithm is the same for upload and download and uses
the same term "load-generating connection" for each.
The actions of the algorithm take place at regular intervals. For the current draft
the interval is defined as one second.</t>

<t>Where</t>

<t><list style="symbols">
  <t><spanx style="verb">i</spanx>: The index of the current interval. The variable <spanx style="verb">i</spanx> is initialized to <spanx style="verb">0</spanx> when the algorithm begins and
increases by one for each interval.</t>
  <t>moving average aggregate goodput at interval p: The number of total bytes of data transferred within
interval <spanx style="verb">p</spanx> and the <spanx style="verb">MAD - 1</spanx> immediately preceding intervals, divided by <spanx style="verb">MAD</spanx> times <spanx style="verb">ID</spanx>.</t>
</list></t>

<t>the steps of the algorithm are:</t>

<t><list style="symbols">
  <t>Create a load-generating connection.</t>
  <t>At each interval:
  <list style="symbols">
      <t>Create an additional load-generating connection.</t>
      <t>If goodput has not saturated:
      <list style="symbols">
          <t>Compute the moving average aggregate goodput at interval <spanx style="verb">i</spanx> as <spanx style="verb">current_average</spanx>.</t>
          <t>If the standard deviation of the past <spanx style="verb">MAD</spanx> average goodput values is less than SDT of the <spanx style="verb">current_average</spanx>, declare goodput saturation and move on to probe responsiveness.</t>
        </list></t>
      <t>If goodput saturation has been declared:
      <list style="symbols">
          <t>Compute the responsiveness at interval <spanx style="verb">i</spanx> as <spanx style="verb">current_responsiveness</spanx>.</t>
          <t>If the standard deviation of the past MAD responsiveness values is less than SDT of the <spanx style="verb">current_responsiveness</spanx>, declare responsiveness saturation and report <spanx style="verb">current_responsiveness</spanx>
as the final test result.</t>
        </list></t>
    </list></t>
</list></t>

<t>In <xref target="goals"/>, it is mentioned that one of the goals is that the test finishes within
20 seconds. It is left to the implementation what to do when stability is not reached
within that time-frame. For example, an implementation might gather a provisional
responsiveness measurement or let the test run for longer.</t>

<t>Finally, if at any point one of these connections terminates with an error, the test should be aborted.</t>

<section anchor="confidence-of-test-results"><name>Confidence of test-results</name>

<t>As described above, a tool running the algorithm typically defines a time-limit for
the execution of each of the stages. For example, if the tool allocates a total
run-time of 40 seconds, and it executes a full downlink followed by a uplink test,
it may allocate 10 seconds to each of the saturation-stages (downlink capacity saturation, downlink responsiveness saturation, uplink capacity saturation, uplink responsiveness saturation).</t>

<t>As the different stages may or may not reach stability, we can define a "confidence score"
for the different metrics (capacity and responsiveness) the methodology was able to measure.</t>

<t>We define "Low" confidence in the result if the algorithm was not even able to
execute 4 iterations of the specific stage. Meaning, the moving average is
not taking the full window into account.</t>

<t>We define "Medium" confidence if the algorithm was able to execute at least 4
iterations, but did not reach stability based on standard deviation tolerance.</t>

<t>We define "High" confidence if the algorithm was able to fully reach stability
based on the defined standard deviation tolerance.</t>

<t>It must be noted that depending on the chosen standard deviation tolerance or
other parameters of the methodology and the network-environment it may be that a
measurement never converges to a stable point.
This is expected and part of the dynamic nature of networking and the accompanying
measurement inaccuracies. Which is why the importance of imposing a time-limit
is so crucial, together with an accurate depiction of the "confidence" the methodology
was able to generate.</t>

</section>
</section>
</section>
<section anchor="interpreting-responsiveness-results"><name>Interpreting responsiveness results</name>

<t>The described methodology uses a high-level approach to measure responsiveness.
By executing the test with regular HTTP requests a number of elements come into
play that will influence the result. Contrary to more traditional measurement methods
the responsiveness metric is not only influenced by the properties of the
network but can significantly be influenced by the properties of the client
and the server implementations. This section describes how the different
elements influence responsiveness and how a user may differentiate them
when debugging a network.</t>

<section anchor="elements-influencing-responsiveness"><name>Elements influencing responsiveness</name>

<t>Due to the HTTP-centric approach of the measurement methodology a number of
factors come into play that influence the results. Namely, the client-side
networking stack (from the top of the HTTP-layer all the way down to the physical layer),
the network (including potential transparent HTTP "accelerators"), and the server-side
networking stack. The following outlines how each of these contributes to the responsiveness.</t>

<section anchor="client-side-influence"><name>Client side influence</name>

<t>As the driver of the measurement, the client-side networking stack can have a
large influence on the result. The biggest influence of the client comes
when measuring the responsiveness in the uplink direction. Load-generation will
cause queue-buildup in the transport layer as well as the HTTP layer. Additionally,
if the network's bottleneck is on the first hop, queue-buildup will happen at the
layers below the transport stack (e.g., NIC firmware).</t>

<t>Each of these queue build-ups may cause latency and thus low responsiveness.
A well designed networking stack would ensure that queue-buildup in the TCP layer
is kept at a bare minimum with solutions like TCP_NOTSENT_LOWAT <xref target="RFC9293"/>.
At the HTTP/2 layer it is important that the load-generating data is not interfering
with the latency-measuring probes. For example, the different streams should not
be stacked one after the other but rather be allowed to be multiplexed for
optimal latency. The queue-buildup at these layers would only influence latency
on the probes that are sent on the load-generating connections.</t>

<t>Below the transport layer many places have a potential queue build-up. It is
important to keep these queues at reasonable sizes or that they implement techniques
like FQ-Codel. Depending on the techniques used at these layers, the queue build-up
can influence latency on probes sent on load-generating connections as well as
separate connections. If flow-queuing is used at these layers, the impact on
separate connections will be negligible.</t>

</section>
<section anchor="network-influence"><name>Network influence</name>

<t>The network obviously is a large driver for the responsiveness result.
Propagation delay from the client to the server as well as queuing in the
bottleneck node will cause latency. Beyond these traditional sources of latency,
other factors may influence the results as well. Many networks deploy transparent
TCP Proxies, firewalls doing deep packet-inspection, HTTP "accelerators",...
As the methodology relies on the use of HTTP/2, the responsiveness metric will
be influenced by such devices as well.</t>

<t>The network will influence both kinds of latency probes that the responsiveness
tests sends out. Depending on the network's use of Smart Queue Management and whether
this includes flow-queuing or not, the latency probes on the load-generating
connections may be influenced differently than the probes on the separate
connections.</t>

</section>
<section anchor="server-side-influence"><name>Server side influence</name>

<t>Finally, the server-side introduces the same kind of influence on the responsiveness
as the client-side, with the difference that the responsiveness will be impacted
during the downlink load generation.</t>

</section>
</section>
<section anchor="root-causing-responsiveness"><name>Root-causing Responsiveness</name>

<t>Once a responsiveness result has been generated one might be tempted to try to localize
the source of a potential low responsiveness. The responsiveness measurement
is however aimed at providing a quick, top-level view of the responsiveness
under working conditions the way end-users experience it.
Localizing the source of low responsiveness involves however a set of different
tools and methodologies.</t>

<t>Nevertheless, the Responsiveness Test allows to gain some insight into what the
source of the latency is. The previous section described the elements that influence
the responsiveness. From there it became apparent that the latency measured
on the load-generating connections and the latency measured on separate connections
may be different due to the different elements.</t>

<t>For example, if the latency measured on separate connections is much less than the
latency measured on the load-generating connections, it is possible to narrow
down the source of the additional latency on the load-generating connections.
As long as the other elements of the network don't do flow-queueing, the additional
latency must come from the queue build-up at the HTTP and TCP layer.
This is because all other bottlenecks in the network that may cause a queue build-up
will be affecting the load-generating connections as well as the separate latency
probing connections in the same way.</t>

</section>
</section>
<section anchor="responsiveness-test-server-api"><name>Responsiveness Test Server API</name>

<t>The responsiveness measurement is built upon a foundation of standard protocols:
IP, TCP, TLS, HTTP/2.
On top of this foundation, a minimal amount of new "protocol" is defined,
merely specifying the URLs that used for GET and PUT in the process of
executing the test.</t>

<t>Both the client and the server MUST support HTTP/2 over TLS.
The client MUST be able to send a GET request and a POST.
The server MUST be able to respond to both of these
HTTP commands.
The server MUST have the ability to provide content upon a GET request.
The server MUST use a packet scheduling algorithm that minimizes internal queueing
to avoid affecting the client's measurement.</t>

<t>As clients and servers become deployed that use L4S congestion control
(e.g., TCP Prague with ECT(1) packet marking),
for their normal traffic when it is available, and fall back
to traditional loss-based congestion controls (e.g., Reno or CUBIC)
otherwise, the same strategy SHOULD be used for Responsiveness Test traffic.
This is RECOMMENDED so that the synthetic traffic generated
by the Responsiveness Test mimics real-world traffic for that server.</t>

<t>Delay-based congestion-control algorithms (e.g., Vegas, FAST, BBR)
SHOULD NOT be used for Responsiveness Test traffic because they take
much longer to discover the depth of the bottleneck buffers.
Delay-based congestion-control algorithms seek to mitigate the
effects of bufferbloat, by detecting and responding to early signs
of increasing round-trip delay, and reducing the amount of data they
have in flight before the bottleneck buffer fills up and overflows.
In a world where bufferbloat is common, this is a pragmatic
mitigation to allow software to work better in that environment.
However, that approach does not fix the underlying problem of bufferbloat;
it merely avoids it in some cases,
and allows the problem in the network to persist.
For a diagnostic tool made to identify symptoms of bufferbloat in the
network so that they can be fixed, using a transport protocol explicitly
designed to mask those symptoms would be a poor choice, and would
require the test to run for much longer to deliver the same results.</t>

<t>The server MUST respond to 4 URLs:</t>

<t><list style="numbers">
  <t>A "small" URL/response:
The server must respond with a status code of 200 and 1 byte in the body.
The actual message content is irrelevant.
The server SHOULD specify the content-type as application/octet-stream.
The server SHOULD minimize the size, in bytes, of the response fields that are encoded and sent on the wire.</t>
  <t>A "large" URL/response:
The server must respond with a status code of 200 and a body size of at least 8GB.
The server SHOULD specify the content-type as application/octet-stream.
The body can be bigger, and may need to grow as network speeds increases over time.
The actual message content is irrelevant.
The client will probably never completely download the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>An "upload" URL/response:
The server must handle a POST request with an arbitrary body size.
The server should discard the payload.
The actual POST message content is irrelevant.
The client will probably never completely upload the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>A .well-known URL <xref target="RFC8615"/> which contains configuration information for
the client to run the test (See <xref target="discovery"/>, below.)</t>
</list></t>

<t>The client begins the responsiveness measurement by querying for the JSON <xref target="RFC8259"/> configuration.
This supplies the URLs for creating the load-generating connections in
the upstream and downstream direction as well as the small object
for the latency measurements.</t>

</section>
<section anchor="discovery"><name>Responsiveness Test Server Discovery</name>

<t>It makes sense for a service provider (either an application service provider like a video conferencing service
or a network access provider like an ISP) to host Responsiveness Test Server instances on their
network so customers can determine what to expect about the quality of their connection to
the service offered by that provider.
However, when a user performs a Responsiveness Test and determines
that they are suffering from poor responsiveness during the connection to that service,
the logical next questions might be,</t>

<t><list style="numbers">
  <t>"What's causing my poor performance?"</t>
  <t>"Is it poor buffer management by my ISP?"</t>
  <t>"Is it poor buffer management in my home Wi-Fi Access point?"</t>
  <t>"Something to do with the service provider?"</t>
  <t>"Something else entirely?"</t>
</list></t>

<t>To help an end user answer these questions, it will be useful for test clients
to be able to easily discover Responsiveness Test Server instances running in various
places in the network (e.g., their home router, their Wi-Fi access point, their ISP's
head-end equipment, etc).</t>

<t>Consider this example scenario: A user has a cable modem
service offering 100 Mb/s download speed, connected via
gigabit Ethernet to one or more Wi-Fi access points in their home,
which then offer service to Wi-Fi client devices at different rates
depending on distance, interference from other traffic, etc.
By having the cable modem itself host a Responsiveness Test Server instance,
the user can then run a test between the cable modem and their computer
or smartphone, to help isolate whether bufferbloat they are experiencing
is occurring in equipment inside the home (like their Wi-Fi access points)
or somewhere outside the home.</t>

<section anchor="well-known-uniform-resource-identifier-uri-for-test-server-discovery"><name>Well-Known Uniform Resource Identifier (URI) For Test Server Discovery</name>

<t>Any organization that wishes to host their own instance of a Responsiveness Test Server can advertise that capability
by hosting at the network quality well-known URI a resource whose content type is application/json and contains a valid JSON object meeting the
following criteria:</t>

<figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "large_download_url":"https://nq.example.com/api/v1/large",
    "small_download_url":"https://nq.example.com/api/v1/small",
    "upload_url":        "https://nq.example.com/api/v1/upload"
  }
  "test_endpoint": "hostname123.provider.com"
}
]]></artwork></figure>

<t>The server SHALL specify the content-type of the resource at the well-known URI as application/json.</t>

<t>The content of the "version" field SHALL be "1". Integer values greater than "1" are reserved
for future versions of this protocol.
The content of the "large_download_url", "small_download_url", and "upload_url" SHALL
all be validly formatted "http" or "https" URLs. See above for the semantics of the fields.
All of the fields in the sample configuration are required except "test_endpoint".
If the test server provider can pin all of the requests for a test run to a specific
host in the service (for a particular run), they can specify that host name in the
"test_endpoint" field.</t>

<t>For purposes of registration of the well-known URI <xref target="RFC8615"/>, the application name is "nq". The media type
of the resource at the well-known URI is "application/json" and the format of the resource is as specified
above. The URI scheme is "https". No additional path components, query strings or fragments are valid
for this well-known URI.</t>

</section>
<section anchor="dns-based-service-discovery-for-test-server-discovery"><name>DNS-Based Service Discovery for Test Server Discovery</name>

<t>To further aid the test client in discovering instances of the Responsiveness Test Server, organizations
wishing to host their own instances of the Test Server MAY advertise their availability using
DNS-Based Service Discovery <xref target="RFC6763"/> using conventional, unicast DNS <xref target="RFC1034"/> or multicast DNS <xref target="RFC6762"/>
on the organization network's local link(s).</t>

<t>The Responsiveness Test Service instances should advertise using the service type <xref target="RFC6335"/>
"_nq._tcp".  Population of the appropriate DNS zone with the
relevant unicast discovery records can be performed
automatically using a Discovery Proxy <xref target="RFC8766"/>,
or in some scenarios simply by having a human
administrator manually enter the required records.</t>

<section anchor="example"><name>Example</name>

<t>An obscure service provider hosting a Responsiveness Test Server instance for their
organization (obs.cr) on the "rpm.obs.cr" host would return the following answers
to PTR and SRV conventional DNS queries:</t>

<figure><artwork><![CDATA[
$ nslookup -q=ptr _nq._tcp.obs.cr.
Non-authoritative answer:
_nq._tcp.obs.crname = rpm._nq._tcp.obs.cr.
$ nslookup -q=srv rpm._nq._tcp.obs.cr.
Non-authoritative answer:
rpm._nq._tcp.obs.crservice = 0 0 443 rpm.obs.cr.
]]></artwork></figure>

<t>Given those conventional DNS query responses, the client would proceed to access the rpm.obs.cr
host on port 443 at the .well-known/nq well-known URI to begin the test.</t>

</section>
</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>TBD</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<section anchor="well-known-uri"><name>Well-Known URI</name>

<t>This specification registers the "nq" well-known URI in the
"Well-Known URIs" registry as defined by <xref target="RFC5785"></xref>.</t>

<t>URI suffix: nq</t>

</section>
<section anchor="service-name"><name>Service Name</name>

<t>IANA has added the following value to the "Service Name and Transport
Protocol Port Number Registry" in the System Range.  The registry for
that range requires IETF Review or IESG Approval <xref target="RFC6335"></xref>.</t>

<t>Service Name: nq
Transport Protocol: TCP
Assignee: <contact fullname="Stuart Cheshire"/>
Contact: <contact fullname="Stuart Cheshire"/>
Description: Network Quality test server endpoint</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>Special thanks go to Jeroen Schickendantz for his tireless
enthusiasm around the project and his contributions to this I-D and the development
of the Go responsiveness measurement tool.
We would also like to thank Rich Brown for his editorial pass over this I-D.
We also thank Erik Auerswald, Matt Mathis and Omer Shapira for their constructive feedback on the I-D.</t>

</section>


  </middle>

  <back>



    <references title='Informative References'>

<reference anchor="Bufferbloat" >
  <front>
    <title>Bufferbloat: Dark Buffers in the Internet</title>
    <author initials="J." surname="Gettys">
      <organization></organization>
    </author>
    <author initials="K." surname="Nichols">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Communications of the ACM, Volume 55, Number 1 (2012)" value=""/>
</reference>


<reference anchor='RFC0793' target='https://www.rfc-editor.org/info/rfc793'>
  <front>
    <title>Transmission Control Protocol</title>
    <author fullname='J. Postel' initials='J.' surname='Postel'/>
    <date month='September' year='1981'/>
  </front>
  <seriesInfo name='RFC' value='793'/>
  <seriesInfo name='DOI' value='10.17487/RFC0793'/>
</reference>

<reference anchor='RFC1034' target='https://www.rfc-editor.org/info/rfc1034'>
  <front>
    <title>Domain names - concepts and facilities</title>
    <author fullname='P. Mockapetris' initials='P.' surname='Mockapetris'/>
    <date month='November' year='1987'/>
    <abstract>
      <t>This RFC is the revised basic definition of The Domain Name System. It obsoletes RFC-882. This memo describes the domain style names and their used for host address look up and electronic mail forwarding. It discusses the clients and servers in the domain name system and the protocol used between them.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='13'/>
  <seriesInfo name='RFC' value='1034'/>
  <seriesInfo name='DOI' value='10.17487/RFC1034'/>
</reference>

<reference anchor='RFC5785' target='https://www.rfc-editor.org/info/rfc5785'>
  <front>
    <title>Defining Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname='M. Nottingham' initials='M.' surname='Nottingham'/>
    <author fullname='E. Hammer-Lahav' initials='E.' surname='Hammer-Lahav'/>
    <date month='April' year='2010'/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='5785'/>
  <seriesInfo name='DOI' value='10.17487/RFC5785'/>
</reference>

<reference anchor='RFC6335' target='https://www.rfc-editor.org/info/rfc6335'>
  <front>
    <title>Internet Assigned Numbers Authority (IANA) Procedures for the Management of the Service Name and Transport Protocol Port Number Registry</title>
    <author fullname='M. Cotton' initials='M.' surname='Cotton'/>
    <author fullname='L. Eggert' initials='L.' surname='Eggert'/>
    <author fullname='J. Touch' initials='J.' surname='Touch'/>
    <author fullname='M. Westerlund' initials='M.' surname='Westerlund'/>
    <author fullname='S. Cheshire' initials='S.' surname='Cheshire'/>
    <date month='August' year='2011'/>
    <abstract>
      <t>This document defines the procedures that the Internet Assigned Numbers Authority (IANA) uses when handling assignment and other requests related to the Service Name and Transport Protocol Port Number registry. It also discusses the rationale and principles behind these procedures and how they facilitate the long-term sustainability of the registry.</t>
      <t>This document updates IANA's procedures by obsoleting the previous UDP and TCP port assignment procedures defined in Sections 8 and 9.1 of the IANA Allocation Guidelines, and it updates the IANA service name and port assignment procedures for UDP-Lite, the Datagram Congestion Control Protocol (DCCP), and the Stream Control Transmission Protocol (SCTP). It also updates the DNS SRV specification to clarify what a service name is and how it is registered. This memo documents an Internet Best Current Practice.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='165'/>
  <seriesInfo name='RFC' value='6335'/>
  <seriesInfo name='DOI' value='10.17487/RFC6335'/>
</reference>

<reference anchor='RFC6762' target='https://www.rfc-editor.org/info/rfc6762'>
  <front>
    <title>Multicast DNS</title>
    <author fullname='S. Cheshire' initials='S.' surname='Cheshire'/>
    <author fullname='M. Krochmal' initials='M.' surname='Krochmal'/>
    <date month='February' year='2013'/>
    <abstract>
      <t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
      <t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server. In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
      <t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6762'/>
  <seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>

<reference anchor='RFC6763' target='https://www.rfc-editor.org/info/rfc6763'>
  <front>
    <title>DNS-Based Service Discovery</title>
    <author fullname='S. Cheshire' initials='S.' surname='Cheshire'/>
    <author fullname='M. Krochmal' initials='M.' surname='Krochmal'/>
    <date month='February' year='2013'/>
    <abstract>
      <t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6763'/>
  <seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>

<reference anchor='RFC8615' target='https://www.rfc-editor.org/info/rfc8615'>
  <front>
    <title>Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname='M. Nottingham' initials='M.' surname='Nottingham'/>
    <date month='May' year='2019'/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes.</t>
      <t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space. It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8615'/>
  <seriesInfo name='DOI' value='10.17487/RFC8615'/>
</reference>

<reference anchor='RFC8766' target='https://www.rfc-editor.org/info/rfc8766'>
  <front>
    <title>Discovery Proxy for Multicast DNS-Based Service Discovery</title>
    <author fullname='S. Cheshire' initials='S.' surname='Cheshire'/>
    <date month='June' year='2020'/>
    <abstract>
      <t>This document specifies a network proxy that uses Multicast DNS to automatically populate the wide-area unicast Domain Name System namespace with records describing devices and services found on the local link.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8766'/>
  <seriesInfo name='DOI' value='10.17487/RFC8766'/>
</reference>

<reference anchor='RFC8290' target='https://www.rfc-editor.org/info/rfc8290'>
  <front>
    <title>The Flow Queue CoDel Packet Scheduler and Active Queue Management Algorithm</title>
    <author fullname='T. Hoeiland-Joergensen' initials='T.' surname='Hoeiland-Joergensen'/>
    <author fullname='P. McKenney' initials='P.' surname='McKenney'/>
    <author fullname='D. Taht' initials='D.' surname='Taht'/>
    <author fullname='J. Gettys' initials='J.' surname='Gettys'/>
    <author fullname='E. Dumazet' initials='E.' surname='Dumazet'/>
    <date month='January' year='2018'/>
    <abstract>
      <t>This memo presents the FQ-CoDel hybrid packet scheduler and Active Queue Management (AQM) algorithm, a powerful tool for fighting bufferbloat and reducing latency.</t>
      <t>FQ-CoDel mixes packets from multiple flows and reduces the impact of head-of-line blocking from bursty traffic. It provides isolation for low-rate traffic such as DNS, web, and videoconferencing traffic. It improves utilisation across the networking fabric, especially for bidirectional traffic, by keeping queue lengths short, and it can be implemented in a memory- and CPU-efficient fashion across a wide range of hardware.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8290'/>
  <seriesInfo name='DOI' value='10.17487/RFC8290'/>
</reference>

<reference anchor='RFC8033' target='https://www.rfc-editor.org/info/rfc8033'>
  <front>
    <title>Proportional Integral Controller Enhanced (PIE): A Lightweight Control Scheme to Address the Bufferbloat Problem</title>
    <author fullname='R. Pan' initials='R.' surname='Pan'/>
    <author fullname='P. Natarajan' initials='P.' surname='Natarajan'/>
    <author fullname='F. Baker' initials='F.' surname='Baker'/>
    <author fullname='G. White' initials='G.' surname='White'/>
    <date month='February' year='2017'/>
    <abstract>
      <t>Bufferbloat is a phenomenon in which excess buffers in the network cause high latency and latency variation. As more and more interactive applications (e.g., voice over IP, real-time video streaming, and financial transactions) run in the Internet, high latency and latency variation degrade application performance. There is a pressing need to design intelligent queue management schemes that can control latency and latency variation, and hence provide desirable quality of service to users.</t>
      <t>This document presents a lightweight active queue management design called "PIE" (Proportional Integral controller Enhanced) that can effectively control the average queuing latency to a target value. Simulation results, theoretical analysis, and Linux testbed results have shown that PIE can ensure low latency and achieve high link utilization under various congestion situations. The design does not require per-packet timestamps, so it incurs very little overhead and is simple enough to implement in both hardware and software.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8033'/>
  <seriesInfo name='DOI' value='10.17487/RFC8033'/>
</reference>

<reference anchor='RFC8259' target='https://www.rfc-editor.org/info/rfc8259'>
  <front>
    <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
    <author fullname='T. Bray' initials='T.' role='editor' surname='Bray'/>
    <date month='December' year='2017'/>
    <abstract>
      <t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data.</t>
      <t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='90'/>
  <seriesInfo name='RFC' value='8259'/>
  <seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>

<reference anchor='RFC9293' target='https://www.rfc-editor.org/info/rfc9293'>
  <front>
    <title>Transmission Control Protocol (TCP)</title>
    <author fullname='W. Eddy' initials='W.' role='editor' surname='Eddy'/>
    <date month='August' year='2022'/>
    <abstract>
      <t>This document specifies the Transmission Control Protocol (TCP). TCP is an important transport-layer protocol in the Internet protocol stack, and it has continuously evolved over decades of use and growth of the Internet. Over this time, a number of changes have been made to TCP as it was specified in RFC 793, though these have only been documented in a piecemeal fashion. This document collects and brings those changes together with the protocol specification from RFC 793. This document obsoletes RFC 793, as well as RFCs 879, 2873, 6093, 6429, 6528, and 6691 that updated parts of RFC 793. It updates RFCs 1011 and 1122, and it should be considered as a replacement for the portions of those documents dealing with TCP requirements. It also updates RFC 5961 by adding a small clarification in reset handling while in the SYN-RECEIVED state. The TCP header control bits from RFC 793 have also been updated based on RFC 3168.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='7'/>
  <seriesInfo name='RFC' value='9293'/>
  <seriesInfo name='DOI' value='10.17487/RFC9293'/>
</reference>

<reference anchor='RFC9330' target='https://www.rfc-editor.org/info/rfc9330'>
  <front>
    <title>Low Latency, Low Loss, and Scalable Throughput (L4S) Internet Service: Architecture</title>
    <author fullname='B. Briscoe' initials='B.' role='editor' surname='Briscoe'/>
    <author fullname='K. De Schepper' initials='K.' surname='De Schepper'/>
    <author fullname='M. Bagnulo' initials='M.' surname='Bagnulo'/>
    <author fullname='G. White' initials='G.' surname='White'/>
    <date month='January' year='2023'/>
    <abstract>
      <t>This document describes the L4S architecture, which enables Internet applications to achieve low queuing latency, low congestion loss, and scalable throughput control. L4S is based on the insight that the root cause of queuing delay is in the capacity-seeking congestion controllers of senders, not in the queue itself. With the L4S architecture, all Internet applications could (but do not have to) transition away from congestion control algorithms that cause substantial queuing delay and instead adopt a new class of congestion controls that can seek capacity with very little queuing. These are aided by a modified form of Explicit Congestion Notification (ECN) from the network. With this new architecture, applications can have both low latency and high throughput.</t>
      <t>The architecture primarily concerns incremental deployment. It defines mechanisms that allow the new class of L4S congestion controls to coexist with 'Classic' congestion controls in a shared network. The aim is for L4S latency and throughput to be usually much better (and rarely worse) while typically not impacting Classic performance.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='9330'/>
  <seriesInfo name='DOI' value='10.17487/RFC9330'/>
</reference>




    </references>


<section anchor="example-server-configuration"><name>Example Server Configuration</name>

<t>This section shows fragments of sample server configurations to host an responsiveness
measurement endpoint.</t>

<section anchor="apache-traffic-server"><name>Apache Traffic Server</name>

<t>Apache Traffic Server starting at version 9.1.0 supports configuration as a responsiveness
server. It requires the generator and the statichit plugin.</t>

<t>The sample remap configuration file then is:</t>

<figure><artwork><![CDATA[
map https://nq.example.com/api/v1/config \
    http://localhost/ \
    @plugin=statichit.so \
    @pparam=--file-path=config.example.com.json \
    @pparam=--mime-type=application/json

map https://nq.example.com/api/v1/large \
    http://localhost/cache/8589934592/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/small \
    http://localhost/cache/1/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/upload \
    http://localhost/ \
    @plugin=generator.so
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA9V9+XMbR5Lu7/VX1MO8DZPzAEjUZYsbjl1alD3a0cER6XG8
2N2wGugC0COgG+6DEMaj/ds3v8ysoxsgrYndeLHPcxgEuuvIysr88qisyWRi
2qJdu3P73jXbqmyKW1e6prFdmbva/lTVH4tyaV9UZV60Bf1ustmsdrdf/nxe
zctsQx3kdbZoJ4VrF5Niu91M6l4Dk4ePTJ617tzM6f+XVb0/t02bG9N0s03R
NNTWzX5Lzbx6efO9mVc5dXNuO2rsG1Ns63Pb1l3TPnr48Dk1lNUuO7c3dVZS
F3VrdjSsZV11W3r9yl65elHVm6ycO/vGZU1Xu40rW/PR7enBnJ4pW1eXrp1c
Ysg0hDYr85+zdVVS/3vXmG1xbv+1reZj21DztVs09Gm/wYd/Nybr2lVVnxtr
J/Q/a4uyObcvpvYqy5r5ir8SirxY1UXTVttV+lNV07wuttu1o3HMp/xdQ324
9ty+K53+dJXVH+1P2Z5/nhctUetFt3V1W5TV2L7I1gVNsSwy+/zpw7Mn8lTV
lS3I+mNZtC631y0RurHVwl5sXF3MM37KbbJifW7nWx7RP2fobTqvNqY/nfdT
It3e1cls3hORsvU6+f5/xlTqenPnNK6ntAiuWRW1S2Zy3XZZ3fZ/+Z8xl7kO
6c4J/TS1f8h2tAebZD4/FbQs6dc8Gerv1tUNDRKdvSjKeVGWWVuk/a34pd3q
n7s5vph286nLO2OKkndQSy2Az7/rFgtXz9ZV1p7z63EL0D8TGdq/TO0Prm33
Te/bP07t22K+qtbytQqjUdqivQRV5ZuG3rLtyoU9OpKVIEq5BqMiglebTVcS
4Vj+YG54/uLFm7H9c7XuNs4+fTq2b7vNjATWmT159PDs0Sm18v77Fw+/fv74
XD6ePXz8RD8+/fqbp/rx2ePH4ePXzx7Fj/61b56d+Qe++frZM//x0fOH/uPD
x+HZR0+f68fnj0LHzx8/pmfNZDKx2Yw4LJuTBPq+qi0JrD1Jn6wmYZPZdTb/
iLn1pejY3mZ1UXXNem/ntBldbtbZckxPt66c78e08nYWSTumBW7szLmS2plX
y7L4K71BX2UlCXRa4rYjjnBjeqclRt1sqpIF3batNrwQVZ7tv2osrQNEbDM1
L2kcloQmkTazuZtnucMo8autSsuSNKvz4q/QEq2br7BQaxKj646Xa2yKlsZC
zEZLl2mfdltXs7XbWBoRL6Yrc9vRmlOH6LHek2S2o49ltWtG9EDWWmqlaOyo
BJeuR/xiZm+L3FXUZknzd5D+bWVW2a3z7Td2t6LhN9XGzap8b926cZYaW9EX
1JzZZe18hYFn9skf7aa6LRwI2m2JltBHdruq2qqxi5rIQ+MsanxTuqn5Q7Vz
NM4xvq3Rli2rZPqkrhqapkyPfmwrWhSe6Txr6PVX9BvxQVhd+0vnOgeOyJas
uyIBZUL05y3JErSgcyNKvevqsFJKY1rlyEBjGlQrg4/8dXSNwA51hrkkT2Y7
UruMBXTL+VWjJSdWICLteaj0a9E2sbmp+cnRdNcFUUgWb070aIXObVWt5cuN
aOrmoOkNVoW+37qKZOJXjQGl98SY1n3aQi5gpXcQgdyu0LV0cxppVu/jsMcG
rVEP3boFc4N/N/gKy5KM1txgiQjWdEL5rZsXi0IHNhrAohvXtMJ+Mn7Mqr9l
aXVbMHOTMDtBCxKIMjuif1YWzYa5QonAzG+S6ekgsOX3wsQySV5ssJvAs53C
s3mAZ1OajfPN8nzoYWqYxtgQA5EoGL0nBZVP2rrYNoBO9k1Rdq0b2ZP3V29O
mWbNqurWOViWlMi6y+nFXdGuaAyEuZarLXHLSbcVPqh25Sk+mSInfalyCf3M
axoR+KygsZHwrmpmJD+HXzpSnu1+KpJxU+T0ujG/gx6oq7ybYzb/38hJ++uv
iYL7/Hlqrj1/2XXx0dnFLz8TxHVrelDVx+fPY3v16qV+QUrk82cM8vWTa/kK
aoO+4t3PA42iFkMl0hObg4Ug3WiFW6z1jgQiUaDY0MbB4rt8at5i+xD3rJlM
sqmoMeyfhscsEiKhDq3JxZr0PS21bQoiDhixbFnYoW2SXJD94Nl0S9IzLOWA
0gta7r2FMcLCmzqGiHDUxbwVadnabL3L9g0J8aagvY+poH20ShKEWB7jpgVP
mJ46pvWmCc4cuL5jjm656UUHeZDR2IipINAEXGBMC0xV2VUlhmdTFtBkE9AE
ZePkXc0wQ0ReReqCG/bNbTL0bWc048W5yWif5UW3mTRYE/Sjs19AM/C6U/eM
vGiYbTZfsVlyRMOMDQaqg5t1ddPyXvHDbLbUFm3tC2rtU4bFlfERSei/xOi2
ms+7moVRLjJJlWPUjWOzY1UFHVyStORZ0ts8FyIp7fldiX3blcRptCAsGB1R
gH6p28m6gALKi6butsLYm4wmSHp5RUyJ1Suzuq52LBFU1XXQdUNlIJo8ymt6
Uyee9XjcEndAoXsRieVTQXYgcUmhQk4xBqGeB5Yoy8qJyspJlJWkC5vWZLS5
iYCs/BK5eUxY2RM3XU7HiRzkjZhKvlOSyZCddVYAa9yjQo1jOhfNSiAQbaR5
K8wnQ2JAJDQT7OFHQ41gcelH0cImVWa/+x3pqHpD9sm6Wu5pJ0NJ0DaZVR23
Q5OuN3aUbPcR7VPZekSnpqix+H46sn9JArrGAwmaOtAgcbHQzI/K/dIVW2Zw
aZsXoyIV181XNs/abDpQtKwjw4ggfO2SiFWTyqBxkPrY+p04y/IgyU3XoOVN
VYOapCWJzJghvhQOJ5rTJmTZZ0av5bURiw+7rYLidkeUiJk5ZlrwqEozZm4P
U/3wth2t2xycy6zFXCvyg+wU4hxIZlIj2aZYF1ltT0Y7kYI0AvqKltyBCf9p
JIqTDUbQq+0KyDd6/uzhQ7uhp2RlMsBB6qmxy6rKIVWLlpRPVdK2JURFtFwx
XrPS7v8anfKOaFqX5WO7I6nmFkXpktWvj/l6DsHEyACi6Dafr0kFy2ioSUwx
IiDSuAI2/9I1Le+HcdKMADHQdVQn2GOLDafYI2uUA4tWCJnlt7SGhIYxM1ny
4++mr4pK3FWTRbXOz+33BS0NNA/GR6aEWg140uslO8K7q2IJTsbHGVm0rh5N
LfMq0SPnAZQitSoyhErhvbhcaJUMmIkaMNe8CKIsiQ+Xzu/922zdgeMdVlIs
goznxL8+meTFEr0QLyxpMPLqbkW2tAHnrJsKQh1tWKK7yM2KlLGKxpoXO1vC
CODpgmQy4cF4WSp/X5TAlswe4gEsPJTmyVLrI8KDI0AuauqjqmdDrHMboE26
gp4xsMzodp6BKkviu0OILfzIaCtbLysCiqtoCx5F3LJeJCNp3xUt8X2wHr6Q
lSEZ7aUDnIEzE3Y4UaRhHVcrOwNnEjgn9Eik5yXigbK4GSiG1GNxbvBXvi9p
v89JC7YqXNJnxvIMO2jc4BkFIPLIOqtp2UtxZtADOS3M3KkayAQ/9V7IC3wm
E4e9PoAZMuJsS2piW/OqpuZAui0JvNTEBr5Bu83A/H7Dwk5Z6sZrnWhZEvug
L8QCdbMhPS3KiwfmKUMzjGQci7Ca0SritY/ObVUQ0RcBbtVunSm2Y7gBlnlx
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

-->

</rfc>

